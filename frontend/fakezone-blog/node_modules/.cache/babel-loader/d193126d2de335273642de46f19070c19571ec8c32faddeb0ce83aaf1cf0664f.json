{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\Workspace\\\\blog-fakezone\\\\frontend\\\\fakezone-blog\\\\src\\\\Componentes\\\\MainPage\\\\index.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Head from '../Head';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  termoBusca,\n  categorias,\n  posts\n}) => {\n  console.log(\"🔍 Termo de busca:\", termoBusca);\n  console.log(\"📂 Categorias:\", categorias);\n  console.log(\"📝 Posts:\", posts);\n\n  // filtra categorias e posts conforme a busca\n  const resultados = [...new Set([...categorias, ...posts].map(item => JSON.stringify(item)))].map(str => JSON.parse(str)).filter(item => item.nome.toLowerCase().includes(termoBusca.toLowerCase()));\n  console.log(\"🎯 Resultados filtrados:\", resultados);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), termoBusca && /*#__PURE__*/_jsxDEV(ResultadosContainer, {\n      children: resultados.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum resultado encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this) : resultados.map((item, index) => /*#__PURE__*/_jsxDEV(Resultado, {\n        children: item.nome\n      }, `${item.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = MainPage;\nconst Resultado = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n`;\n_c2 = Resultado;\nconst ResultadosContainer = styled.section`\n  margin-top: 20px; \n  padding: 10px;\n  border-top: 2px solid #ccc;\n`;\n_c3 = ResultadosContainer;\nexport default MainPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MainPage\");\n$RefreshReg$(_c2, \"Resultado\");\n$RefreshReg$(_c3, \"ResultadosContainer\");","map":{"version":3,"names":["React","styled","Head","jsxDEV","_jsxDEV","MainPage","termoBusca","categorias","posts","console","log","resultados","Set","map","item","JSON","stringify","str","parse","filter","nome","toLowerCase","includes","MainContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","ResultadosContainer","length","index","Resultado","id","_c","div","_c2","section","_c3","$RefreshReg$"],"sources":["D:/Documentos/Workspace/blog-fakezone/frontend/fakezone-blog/src/Componentes/MainPage/index.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Head from '../Head';\r\n\r\nconst MainPage = ({ termoBusca, categorias, posts }) => {\r\n    console.log(\"🔍 Termo de busca:\", termoBusca);\r\n    console.log(\"📂 Categorias:\", categorias);\r\n    console.log(\"📝 Posts:\", posts);\r\n\r\n    // filtra categorias e posts conforme a busca\r\n    const resultados = [...new Set([...categorias, ...posts].map(item => JSON.stringify(item)))].map(str => JSON.parse(str)).filter(item => item.nome.toLowerCase().includes(termoBusca.toLowerCase()));\r\n\r\n    console.log(\"🎯 Resultados filtrados:\", resultados);\r\n\r\n    return (\r\n        <MainContainer>\r\n            <Head />\r\n            \r\n            {termoBusca && (\r\n                <ResultadosContainer>\r\n                    {resultados.length === 0 ? (\r\n                        <p>Nenhum resultado encontrado.</p>\r\n                    ) : (\r\n                        resultados.map((item, index) => (\r\n                            <Resultado key={`${item.id}-${index}`}>{item.nome}</Resultado>\r\n                        ))\r\n                    )}\r\n                </ResultadosContainer>\r\n            )}\r\n\r\n           \r\n        </MainContainer>\r\n    );\r\n};\r\n\r\n\r\nconst Resultado = styled.div`\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nconst ResultadosContainer = styled.section`\r\n  margin-top: 20px; \r\n  padding: 10px;\r\n  border-top: 2px solid #ccc;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport default MainPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EACpDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,UAAU,CAAC;EAC7CG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,UAAU,CAAC;EACzCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,KAAK,CAAC;;EAE/B;EACA,MAAMG,UAAU,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAGL,UAAU,EAAE,GAAGC,KAAK,CAAC,CAACK,GAAG,CAACC,IAAI,IAAIC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,CAACD,GAAG,CAACI,GAAG,IAAIF,IAAI,CAACG,KAAK,CAACD,GAAG,CAAC,CAAC,CAACE,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,UAAU,CAACe,WAAW,CAAC,CAAC,CAAC,CAAC;EAEnMZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,UAAU,CAAC;EAEnD,oBACIP,OAAA,CAACmB,aAAa;IAAAC,QAAA,gBACVpB,OAAA,CAACF,IAAI;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEPtB,UAAU,iBACPF,OAAA,CAACyB,mBAAmB;MAAAL,QAAA,EACfb,UAAU,CAACmB,MAAM,KAAK,CAAC,gBACpB1B,OAAA;QAAAoB,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEnCjB,UAAU,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEiB,KAAK,kBACvB3B,OAAA,CAAC4B,SAAS;QAAAR,QAAA,EAA8BV,IAAI,CAACM;MAAI,GAAjC,GAAGN,IAAI,CAACmB,EAAE,IAAIF,KAAK,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAChE;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACgB,CACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGU,CAAC;AAExB,CAAC;AAACM,EAAA,GA7BI7B,QAAQ;AAgCd,MAAM2B,SAAS,GAAG/B,MAAM,CAACkC,GAAG;AAC5B;AACA;AACA,CAAC;AAACC,GAAA,GAHIJ,SAAS;AAKf,MAAMH,mBAAmB,GAAG5B,MAAM,CAACoC,OAAO;AAC1C;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIT,mBAAmB;AAUzB,eAAexB,QAAQ;AAAC,IAAA6B,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}